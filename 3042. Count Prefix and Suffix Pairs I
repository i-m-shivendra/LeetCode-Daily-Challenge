class Solution {
public:
    bool solve(string s,string t){
        if(s.size()>t.size()){
            return false;
        }

        int i=0;
        int j=0;

        while(i<s.size()){
              if(s[i]!=t[j]){
                return false;
              }
              i++;
              j++;
        }
        i=s.size()-1;
        j=t.size()-1;
        while(i>=0){
            if(s[i]!=t[j]){
                return false;
            }
            i--;
            j--;
        }
        return true;
    }
    int countPrefixSuffixPairs(vector<string>& words) {
        int n=words.size();
        int ans=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                 if(i<j && solve(words[i],words[j]))
                 {
                    ans++;
                 }
                // string s1=words[i];
                // string s2=words[j];

                // if(s1.size()<=s1.size())
                // {
                //     string prefix=s2.substr(0,s1.length());
                //     string suffix=s2.substr(s2.length()-
                //               s1.length());

                //     if(prefix==s1 && suffix==s1)
                //     {
                //         ans++;
                //     }

                }

            
        }
        return ans;
    }
};
